{"version":3,"sources":["components/SingleCard.js","components/Cards.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","Cards","useState","cards","setCards","turns","setTurns","firstChoice","setFirstChoice","secondChoice","setSecondChoice","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","prevTurns","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAmBeA,EAjBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAOjD,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBAAKF,UAAU,OAAOC,IAAI,iBAAiBE,QAV7B,WACbJ,GACHF,EAAaD,IAQsDM,IAAI,oBCVvEE,EAAa,CACjB,CAAEH,IAAK,iBAAkBI,SAAS,GAClC,CAAEJ,IAAK,iBAAkBI,SAAS,GAClC,CAAEJ,IAAK,iBAAkBI,SAAS,GAClC,CAAEJ,IAAK,iBAAkBI,SAAS,GAClC,CAAEJ,IAAK,iBAAkBI,SAAS,GAClC,CAAEJ,IAAK,iBAAkBI,SAAS,IAgFrBC,EA7ED,WACZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAsCJ,mBAAS,MAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB2B,GAAIH,KAAKC,cAEtCR,EAAe,MACfE,EAAgB,MAChBN,EAASS,GACTP,EAAS,IAILd,EAAe,SAACD,GACpBgB,EAAcG,EAAgBnB,GAAQiB,EAAejB,IAIvD4B,qBAAU,WACJZ,GAAeE,IACjBE,GAAY,GACRJ,EAAYX,MAAQa,EAAab,KACnCQ,GAAS,SAACgB,GACR,OAAOA,EAAUH,KAAI,SAAC1B,GACpB,OAAIA,EAAKK,MAAQW,EAAYX,IACpB,2BAAKL,GAAZ,IAAkBS,SAAS,IAEpBT,QAIb8B,KAEAC,YAAW,kBAAMD,MAAa,QAGjC,CAACd,EAAaE,IAGjB,IAAMY,EAAY,WAChBb,EAAe,MACfE,EAAgB,MAChBJ,GAAS,SAACiB,GAAD,OAAeA,EAAY,KACpCZ,GAAY,IAQd,OAJAQ,qBAAU,WACRP,MACC,IAGD,gCACE,wBAAQd,QAASc,EAAjB,sBACA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAC1B,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAehB,IAASkB,GAAgBlB,EAAKS,QAC/DN,SAAUA,GAJLH,EAAK2B,SAQhB,wCAAWb,SCxEFmB,MATf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,QCFN8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.057c3d3c.chunk.js","sourcesContent":["import \"./SingleCard.css\";\n\nconst SingleCard = ({ card, handleChoice, flipped, disabled }) => {\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card);\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className={flipped ? \"flipped\" : \"\"}>\n        <img className=\"front\" src={card.src} alt=\"card front\" />\n        <img className=\"back\" src=\"/img/cover.jpg\" onClick={handleClick} alt=\"card back\" />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleCard;\n","import { useEffect, useState } from \"react\";\nimport SingleCard from \"./SingleCard\";\n\nconst cardImages = [\n  { src: \"/img/card1.jpg\", matched: false },\n  { src: \"/img/card2.jpg\", matched: false },\n  { src: \"/img/card3.jpg\", matched: false },\n  { src: \"/img/card4.jpg\", matched: false },\n  { src: \"/img/card5.jpg\", matched: false },\n  { src: \"/img/card6.jpg\", matched: false },\n];\n\nconst Cards = () => {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [firstChoice, setFirstChoice] = useState(null);\n  const [secondChoice, setSecondChoice] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // Shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setFirstChoice(null);\n    setSecondChoice(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  // Handle a choice\n  const handleChoice = (card) => {\n    firstChoice ? setSecondChoice(card) : setFirstChoice(card);\n  };\n\n  // Compare selected cards\n  useEffect(() => {\n    if (firstChoice && secondChoice) {\n      setDisabled(true);\n      if (firstChoice.src === secondChoice.src) {\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (card.src === firstChoice.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [firstChoice, secondChoice]);\n\n  // Reset choices and increase turns\n  const resetTurn = () => {\n    setFirstChoice(null);\n    setSecondChoice(null);\n    setTurns((prevTurns) => prevTurns + 1);\n    setDisabled(false);\n  };\n\n  // Start a new game automatically\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  return (\n    <div>\n      <button onClick={shuffleCards}>New Game</button>\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <SingleCard\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === firstChoice || card === secondChoice || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n};\n\nexport default Cards;\n","import \"./App.css\";\nimport Cards from \"./components/Cards\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Memo Dogs</h1>\n      <Cards />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}